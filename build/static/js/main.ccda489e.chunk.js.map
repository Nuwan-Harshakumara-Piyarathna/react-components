{"version":3,"sources":["components/Home/components/ReadOnlyRow.jsx","components/Home/components/EditableRow.jsx","components/Table/EditableTable.jsx","components/Home/Home.jsx","components/MessangerChat/images/logo.svg","components/MessangerChat/Test.jsx","App.js","index.js"],"names":["ReadOnlyRow","student","handleEditClick","handleDeleteClick","Enumber","Name","Email","type","onClick","event","id","EditableRow","editFormData","handleEditFormChange","handleCancelClick","required","placeholder","name","value","onChange","EditableTable","useState","data","students","setStudents","addFormData","setAddFormData","setEditFormData","editStudentId","setEditStudentId","handleAddFormChange","preventDefault","fieldName","target","getAttribute","fieldValue","newFormData","fromValues","studentId","newStudents","filter","className","onSubmit","editedStudent","findIndex","map","newStudent","nanoid","Home","Test","src","logo","alt","href","rel","pageId","appId","App","path","exact","component","ChatBox","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ccda489e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst ReadOnlyRow = ({ student, handleEditClick, handleDeleteClick }) => {\r\n  return (\r\n    <tr>\r\n      <td>{student.Enumber}</td>\r\n      <td>{student.Name}</td>\r\n      <td>{student.Email}</td>\r\n      <td>\r\n        <button\r\n          type=\"button\"\r\n          onClick={(event) => handleEditClick(event, student)}\r\n        >\r\n          Edit\r\n        </button>\r\n        <button type=\"button\" onClick={() => handleDeleteClick(student.id)}>\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default ReadOnlyRow;\r\n","import React from \"react\";\r\n\r\nconst EditableRow = ({\r\n  editFormData,\r\n  handleEditFormChange,\r\n  handleCancelClick,\r\n}) => {\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          required=\"required\"\r\n          placeholder=\"Enter E number ...\"\r\n          name=\"Enumber\"\r\n          value={editFormData.Enumber}\r\n          onChange={handleEditFormChange}\r\n        />\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          name=\"Name\"\r\n          required=\"required\"\r\n          placeholder=\"Enter Name ...\"\r\n          value={editFormData.Name}\r\n          onChange={handleEditFormChange}\r\n        />\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"email\"\r\n          name=\"Email\"\r\n          required=\"required\"\r\n          placeholder=\"Enter Email ...\"\r\n          value={editFormData.Email}\r\n          onChange={handleEditFormChange}\r\n        />\r\n      </td>\r\n      <td>\r\n        <button type=\"submit\">Save</button>\r\n        <button type=\"button\" onClick={handleCancelClick}>\r\n          Cancel\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default EditableRow;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport \"./css/EditableTable.css\";\r\nimport data from \"./data/mock-data.json\";\r\nimport { nanoid } from \"nanoid\";\r\nimport ReadOnlyRow from \"../Home/components/ReadOnlyRow\";\r\nimport EditableRow from \"../Home/components/EditableRow\";\r\n\r\nconst EditableTable = () => {\r\n  const [students, setStudents] = useState(data);\r\n  const [addFormData, setAddFormData] = useState({\r\n    Enumber: \"\",\r\n    Name: \"\",\r\n    Email: \"\",\r\n  });\r\n  const [editFormData, setEditFormData] = useState({\r\n    Enumber: \"\",\r\n    Name: \"\",\r\n    Email: \"\",\r\n  });\r\n  const [editStudentId, setEditStudentId] = useState(null);\r\n\r\n  const handleAddFormChange = (event) => {\r\n    event.preventDefault(); //prevent form doing post request\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...addFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setAddFormData(newFormData);\r\n  };\r\n\r\n  const handleEditFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...editFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setEditFormData(newFormData);\r\n  };\r\n\r\n  const handleAddFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const newStudent = {\r\n      id: nanoid(),\r\n      Enumber: addFormData.Enumber,\r\n      Name: addFormData.Name,\r\n      Email: addFormData.Email,\r\n    };\r\n\r\n    const newStudents = [...students, newStudent];\r\n    setStudents(newStudents);\r\n  };\r\n\r\n  const handleEditFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const editedStudent = {\r\n      id: editStudentId,\r\n      Enumber: editFormData.Enumber,\r\n      Name: editFormData.Name,\r\n      Email: editFormData.Email,\r\n    };\r\n\r\n    const newStudents = [...students];\r\n    const index = students.findIndex((student) => student.id === editStudentId);\r\n    newStudents[index] = editedStudent;\r\n    setStudents(newStudents);\r\n    setEditStudentId(null);\r\n  };\r\n\r\n  const handleEditClick = (event, student) => {\r\n    event.preventDefault();\r\n\r\n    setEditStudentId(student.id);\r\n\r\n    const fromValues = {\r\n      Enumber: student.Enumber,\r\n      Name: student.Name,\r\n      Email: student.Email,\r\n    };\r\n\r\n    setEditFormData(fromValues);\r\n  };\r\n\r\n  const handleCancelClick = () => {\r\n    setEditStudentId(null);\r\n  };\r\n\r\n  const handleDeleteClick = (studentId) => {\r\n    const newStudents = students.filter((student) => student.id != studentId);\r\n    setStudents(newStudents);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <form onSubmit={handleEditFormSubmit}>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>E number</th>\r\n              <th>Name</th>\r\n              <th>Email</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {students.map((student) => (\r\n              <Fragment>\r\n                {editStudentId === student.id ? (\r\n                  <EditableRow\r\n                    editFormData={editFormData}\r\n                    handleEditFormChange={handleEditFormChange}\r\n                    handleCancelClick={handleCancelClick}\r\n                  />\r\n                ) : (\r\n                  <ReadOnlyRow\r\n                    student={student}\r\n                    handleEditClick={handleEditClick}\r\n                    handleDeleteClick={handleDeleteClick}\r\n                  />\r\n                )}\r\n              </Fragment>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </form>\r\n      <h2>Add a Student</h2>\r\n      <form onSubmit={handleAddFormSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"Enumber\"\r\n          required=\"required\"\r\n          placeholder=\"Enter E number ...\"\r\n          onChange={handleAddFormChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"Name\"\r\n          required=\"required\"\r\n          placeholder=\"Enter Name ...\"\r\n          onChange={handleAddFormChange}\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          name=\"Email\"\r\n          required=\"required\"\r\n          placeholder=\"Enter Email ...\"\r\n          onChange={handleAddFormChange}\r\n        />\r\n        <button type=\"submit\">Add</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditableTable;\r\n","import React from \"react\";\r\n\r\nconst Home = () => {\r\n  return <h1>Home</h1>;\r\n};\r\n\r\nexport default Home;\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport \"./css/Test.css\";\r\nimport logo from \"./images/logo.svg\";\r\nimport MessengerCustomerChat from \"react-messenger-customer-chat\";\r\n\r\nconst Test = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header>\r\n      <MessengerCustomerChat\r\n        pageId=\"104623278386310\"\r\n        appId=\"3142755355947250\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Test;\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport EditableTable from \"./components/Table/EditableTable\";\nimport Home from \"./components/Home/Home\";\nimport ChatBox from \"./components/MessangerChat/Test\";\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/table\" exact component={EditableTable} />\n          <Route path=\"/messanger\" exact component={ChatBox} />\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}